<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             xmlns:media="clr-namespace:FluentAvalonia.UI.Media;assembly=FluentAvalonia"
        xmlns:sty="using:FluentAvalonia.Styling">

	<Design.PreviewWith>
		<Border Padding="30">
			<!--<TextBox Width="100" Classes="clearButton" />-->
			<ui:NumberBox Width="150" SpinButtonPlacementMode="Compact" Minimum="0" Maximum="100" Value="10" />
		</Border>
	</Design.PreviewWith>

	<Styles.Resources>
		<Thickness x:Key="NumberBoxSpinButtonBorderThickness">0,1,1,1</Thickness>
		<Thickness x:Key="NumberBoxIconMargin">10,0,0,0</Thickness>

		<x:Double x:Key="NumberBoxPopupHorizonalOffset">-21</x:Double>
		<x:Double x:Key="NumberBoxPopupVerticalOffset">-27</x:Double>
		<x:Double x:Key="NumberBoxPopupShadowDepth">16</x:Double>

		<Thickness x:Key="NumberBoxPopupIndicatorMargin">0,0,8,0</Thickness>
	</Styles.Resources>

	<Style Selector="RepeatButton.NumberBoxSpinButtonStyle">
		<Setter Property="MinWidth" Value="32"/>
		<Setter Property="Padding" Value="0" />
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource NumberBoxSpinButtonBorderThickness}"/>
		<Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<Setter Property="Template">
			<ControlTemplate>
				<ContentPresenter Background="{TemplateBinding Background}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderThickness="{TemplateBinding BorderThickness}"
								  TextBlock.Foreground="{TemplateBinding Foreground}"
								  Padding="{TemplateBinding Padding}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  Content="{TemplateBinding Content}"
								  HorizontalContentAlignment="Center"
								  VerticalContentAlignment="Center"/>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="RepeatButton.NumberBoxSpinButtonStyle:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparent}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
	</Style>
	<Style Selector="RepeatButton.NumberBoxSpinButtonStyle:pressed /template/ ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparent}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
	</Style>
	<Style Selector="RepeatButton.NumberBoxSpinButtonStyle:disabled /template/ ContentPresenter">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
	</Style>

	<Style Selector="RepeatButton.NumberBoxPopupButton">
		<Setter Property="Width" Value="36"/>
		<Setter Property="Height" Value="36"/>
	</Style>

	<!-- NumberBox TextBox Style -->
	<Style Selector="TextBox.NumberBoxTextBoxStyle">
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<Border Name="PART_BorderElement"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							MinWidth="{TemplateBinding MinWidth}"
							MinHeight="{TemplateBinding MinHeight}"
							RenderTransform="scaleY(-1)"
							CornerRadius="{TemplateBinding CornerRadius}" />
					
					<Border Margin="{TemplateBinding BorderThickness}">
						<Grid ColumnDefinitions="Auto,*,Auto" >
							<DockPanel x:Name="PART_InnerDockPanel" 
										Grid.Column="1" 
										Grid.ColumnSpan="1" 
										Margin="{TemplateBinding Padding}">
								<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
												VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
									<Panel>
										<TextBlock Name="PART_Watermark"
												Text="{TemplateBinding Watermark}"
												TextAlignment="{TemplateBinding TextAlignment}"
												TextWrapping="{TemplateBinding TextWrapping}"
												IsVisible="{TemplateBinding Text, Converter={x:Static StringConverters.IsNullOrEmpty}}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												IsHitTestVisible="False"/>
										<TextPresenter Name="PART_TextPresenter"
														Text="{TemplateBinding Text, Mode=TwoWay}"
														CaretIndex="{TemplateBinding CaretIndex}"
														SelectionStart="{TemplateBinding SelectionStart}"
														SelectionEnd="{TemplateBinding SelectionEnd}"
														TextAlignment="{TemplateBinding TextAlignment}"
														TextWrapping="{TemplateBinding TextWrapping}"
														PasswordChar="{TemplateBinding PasswordChar}"
														RevealPassword="{TemplateBinding RevealPassword}"
														SelectionBrush="{TemplateBinding SelectionBrush}"
														SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
														CaretBrush="{TemplateBinding CaretBrush}"
														HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Panel>
								</ScrollViewer>
							</DockPanel>
							<StackPanel Orientation="Horizontal" Grid.Column="2" Grid.ColumnSpan="1">
								<ContentPresenter Content="{TemplateBinding InnerRightContent}"
													Name="InnerRightContent"/>
								<Viewbox Margin="{DynamicResource NumberBoxPopupIndicatorMargin}"
											VerticalAlignment="Center" HorizontalAlignment="Center"
											Width="18" Height="18"
											Name="PopupIndicator">
									<ui:FontIcon Glyph="&#xEC8F;"
													FontFamily="{DynamicResource SymbolThemeFontFamily}"
													FontSize="24"
													Foreground="{DynamicResource NumberBoxPopupIndicatorForeground}" />
								</Viewbox>
							</StackPanel>
						</Grid>
					</Border>						
				</Panel>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="TextBox.NumberBoxTextBoxStyle /template/ Viewbox#PopupIndicator">
		<Setter Property="IsVisible" Value="False" />
	</Style>


	<Style Selector="ui|NumberBox">
		<Setter Property="SelectionHighlightColor" Value="{DynamicResource TextControlSelectionHighlightColor}" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<Setter Property="Template">
			<ControlTemplate>
				<DataValidationErrors>
					<Grid Name="Root" RowDefinitions="Auto,*,Auto"
						ColumnDefinitions="*,Auto,Auto">

						<ContentPresenter Name="HeaderContentPresenter"
										Grid.ColumnSpan="3"
										Content="{TemplateBinding Header}"
										ContentTemplate="{TemplateBinding HeaderTemplate}"
										TextElement.FontWeight="Normal"
										Margin="{DynamicResource TextBoxTopHeaderMargin}"
										TextElement.FontSize="{TemplateBinding FontSize}"
										TextElement.FontFamily="{TemplateBinding FontFamily}"
										VerticalAlignment="Top"
										IsVisible="{TemplateBinding Header, Converter={x:Static ObjectConverters.IsNotNull}}"/>

						<TextBox Name="InputBox"
								Grid.Row="1"
								Grid.ColumnSpan="3"
								Foreground="{TemplateBinding Foreground}"
								Watermark="{TemplateBinding PlaceholderText}"
								DataValidationErrors.Errors="{TemplateBinding DataValidationErrors.Errors}"
								SelectionBrush="{TemplateBinding SelectionHighlightColor}"
								FontSize="{TemplateBinding FontSize}"
								FontWeight="{TemplateBinding FontWeight}"
								FontFamily="{TemplateBinding FontFamily}"
								TextAlignment="{TemplateBinding TextAlignment}"
								Classes="NumberBoxTextBoxStyle clearButton"
								CornerRadius="{TemplateBinding CornerRadius}"/>

						<Popup Name="UpDownPopup" Focusable="False"
							WindowManagerAddShadowHint="False"
							IsLightDismissEnabled="True"
							PlacementMode="AnchorAndGravity"
							PlacementAnchor="Right"
							PlacementGravity="Bottom"
							Grid.Row="1"
							Grid.Column="1"
							VerticalOffset="{DynamicResource NumberBoxPopupVerticalOffset}"
							HorizontalOffset="{DynamicResource NumberBoxPopupHorizontalOffset}"
							HorizontalAlignment="Left">

							<Border Name="PopupContentRoot"
									Background="{DynamicResource NumberBoxPopupBackground}"
									BorderBrush="{DynamicResource NumberBoxPopupBorderBrush}"
									BorderThickness="{DynamicResource NumberBoxPopupBorderThickness}"
									CornerRadius="{DynamicResource OverlayCornerRadius}"
									Padding="6">

								<Grid RowDefinitions="*,*">
									<RepeatButton Name="PopupUpSpinButton" Focusable="False"
												FontSize="18"
												Classes="NumberBoxSpinButtonStyle NumberBoxPopupButton"
												Content="{StaticResource ChevronUpGlyph}" />

									<RepeatButton Name="PopupDownSpinButton" Focusable="False"
												FontSize="18"
												Classes="NumberBoxSpinButtonStyle NumberBoxPopupButton"
												Grid.Row="1"
												Content="{StaticResource ChevronDownGlyph}" />
								</Grid>
							</Border>
						</Popup>

						<!-- Prevents hover state of text box if buttons are disabled 
						WinUI uses a button b/c reasons, simple border works just fine -->
						<Border Background="Transparent"
								Grid.Row="1"
								Grid.Column="1"
								Grid.ColumnSpan="2"
								Margin="4 0 0 0"
								Name="InputEater" />

						<RepeatButton Name="UpSpinButton"
									Grid.Row="1"
									Grid.Column="1"
									FontSize="18"
									Classes="NumberBoxSpinButtonStyle"
									Content="{StaticResource ChevronUpGlyph}"
									Margin="4"/>

						<RepeatButton Name="DownSpinButton"
									Grid.Row="1"
									Grid.Column="2"
									FontSize="18"
									Content="{StaticResource ChevronDownGlyph}"
									Classes="NumberBoxSpinButtonStyle"
									Margin="0 4 4 4"/>

						<ContentPresenter Name="DescriptionPresenter"
										Grid.Row="2"
										Grid.ColumnSpan="3"
										Content="{TemplateBinding Description}"
										TextBlock.Foreground="{DynamicResource SystemControlDescriptionTextForegroundBrush}"/>
					</Grid>
				</DataValidationErrors>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="ui|NumberBox /template/ ContentPresenter#HeaderPresenter">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource TextControlHeaderForeground}" />
	</Style>
	<Style Selector="ui|NumberBox /template/ RepeatButton#UpSpinButton">
		<Setter Property="IsVisible" Value="False" />
	</Style>
	<Style Selector="ui|NumberBox /template/ RepeatButton#DownSpinButton">
		<Setter Property="IsVisible" Value="False" />
	</Style>
	<Style Selector="ui|NumberBox /template/ Border#InputEater">
		<Setter Property="IsVisible" Value="False" />
	</Style>

	<Style Selector="ui|NumberBox:disabled /template/ ContentPresenter#HeaderPresenter">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource TextControlHeaderForegroundDisabled}" />
	</Style>

	<!-- :spincollapsed (default) -->

	<!-- :spinvisible-->
	<Style Selector="ui|NumberBox:spinvisible /template/ RepeatButton#UpSpinButton">
		<Setter Property="IsVisible" Value="True" />
	</Style>
	<Style Selector="ui|NumberBox:spinvisible /template/ RepeatButton#DownSpinButton">
		<Setter Property="IsVisible" Value="True" />
	</Style>
	<Style Selector="ui|NumberBox:spinvisible /template/ Border#InputEater">
		<Setter Property="IsVisible" Value="True" />
	</Style>
	<Style Selector="ui|NumberBox:spinvisible /template/ TextBox#InputBox /template/ ContentPresenter#InnerRightContent">
		<Setter Property="Margin" Value="0 0 72 0" />
	</Style>

	<!-- :spinpopup -->
	<Style Selector="ui|NumberBox:spinpopup /template/ TextBox#InputBox /template/ Viewbox#PopupIndicator">
		<Setter Property="IsVisible" Value="True" />
	</Style>


	<Style Selector="ui|NumberBox:updisabled /template/ RepeatButton#UpSpinButton">
		<Setter Property="IsEnabled" Value="False" />
	</Style>
	<Style Selector="ui|NumberBox:updisabled /template/ RepeatButton#PopupUpSpinButton">
		<Setter Property="IsEnabled" Value="False" />
	</Style>

	<Style Selector="ui|NumberBox:downdisabled /template/ RepeatButton#DownSpinButton">
		<Setter Property="IsEnabled" Value="False" />
	</Style>
	<Style Selector="ui|NumberBox:downdisabled /template/ RepeatButton#PopupDownSpinButton">
		<Setter Property="IsEnabled" Value="False" />
	</Style>

</Styles>
