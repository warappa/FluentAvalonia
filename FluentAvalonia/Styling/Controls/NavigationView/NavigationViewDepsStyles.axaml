<Styles xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             xmlns:media="clr-namespace:FluentAvalonia.UI.Media;assembly=FluentAvalonia">

    <Design.PreviewWith>
        <Border Padding="50">
            <StackPanel Spacing="4">
                <ui:Button Classes="PaneToggleButtonStyle" />
				<ui:Button Classes="NavigationViewPaneSearchButtonStyle" />
				<ui:Button Classes="NavigationViewOverflowButtonStyleWhenPaneOnTop" />
                <TextBlock Text="Header Style" Classes="NavigationViewItemHeaderTextStyle" />
                <ContentControl Classes="NavigationViewTitleHeaderContentControlTextStyle" Content="Title" />
            </StackPanel>
        </Border>
    </Design.PreviewWith>
    
    <Styles.Resources>
        <!-- Avalonia doesn't support (currently) double to GridLength conversion, 
             so some resources have a duplicate GridLength resource -->  
        <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">16,0</Thickness>
        <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">4,0</Thickness>
        <x:Double x:Key="PaneToggleButtonHeight">36</x:Double>
        <GridLength x:Key="PaneToggleButtonHeightGridLength">36</GridLength>
        <x:Double x:Key="PaneToggleButtonWidth">40</x:Double>
        <x:Double x:Key="NavigationViewCompactPaneLength">48</x:Double>
        <x:Double x:Key="NavigationViewIconBoxWidth">40</x:Double>
        <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
        <x:Double x:Key="NavigationViewAutoSuggestAreaHeight">40</x:Double>
        <x:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">48</x:Double>
        <x:Double x:Key="TopNavigationViewOverflowButtonWidth">40</x:Double>
        <x:Double x:Key="TopNavigationViewOverflowButtonHeight">40</x:Double>
        <x:Double x:Key="TopNavigationViewSettingsButtonWidth">40</x:Double>
        <x:Double x:Key="TopNavigationViewSettingsButtonHeight">40</x:Double>

        <x:Double x:Key="NavigationViewItemOnLeftMinHeight">36</x:Double>
        <x:Double x:Key="NavigationViewPaneHeaderRowMinHeight">40</x:Double>
		<x:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">16</x:Double>
		<x:Double x:Key="NavigationViewSelectionIndicatorWidth">3</x:Double>
		<x:Double x:Key="NavigationViewSelectionIndicatorHeight">16</x:Double>
		<!-- Changed to CornerRadius -->
		<CornerRadius x:Key="NavigationViewSelectionIndicatorRadius">2</CornerRadius>
		
        <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
        <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>

        <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
        <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
        <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">0</Thickness>
        <Thickness x:Key="NavigationViewItemButtonMargin">4,2</Thickness>
        <Thickness x:Key="NavigationViewItemInnerHeaderMargin">16,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemInnerHeaderMargin">12,0</Thickness>
        <Thickness x:Key="NavigationViewMinimalHeaderMargin">-24,44,0,0</Thickness>
        <Thickness x:Key="NavigationViewButtonHolderGridMargin">0,4</Thickness>
        <Thickness x:Key="NavigationViewPaneContentGridMargin">-1,3</Thickness>
		<Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
		<Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0,1,0,0</Thickness>
		<Thickness x:Key="TopNavigationViewContentGridBorderThickness">0,1,0,0</Thickness>
        <Thickness x:Key="TopNavigationViewTopNavGridMargin">4,0</Thickness>
		<Thickness x:Key="NavigationViewBorderThickness">1</Thickness>
        <Thickness x:Key="NavigationViewHeaderMargin">56,44,0,0</Thickness>
        <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
        <Thickness x:Key="NavigationViewContentMargin">0</Thickness>
		<Thickness x:Key="TopNavigationViewContentMargin">0</Thickness>
        <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
        <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
        <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
        <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
        <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
        <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>
        <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
        <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,0</Thickness>
        <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,-1,12,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
        <Thickness x:Key="NavigationViewItemExpandChevronMargin">0,0,-14,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,-8,0</Thickness>
        <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>

        <!-- The two resources below must be defined at the app level in order to take effect. -->
        <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
        <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>

        <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">18.0</x:Double>
        <x:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</x:String>

		<CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
		<CornerRadius x:Key="TopNavigationViewContentGridCornerRadius">0</CornerRadius>
		<CornerRadius x:Key="NavigationViewMinimalContentGridCornerRadius">0</CornerRadius>
		<Thickness x:Key="NavigationViewMinimalContentMargin">0</Thickness>
    </Styles.Resources>

    <!-- - - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - Pane ToggleButton Style - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - - - - -->

    <Style Selector="ui|Button.PaneToggleButtonStyle">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
        <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewToggleBorderThickness}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="LayoutRoot"
                        Background="{TemplateBinding Background}"
                        Margin="{TemplateBinding Padding}"
                        Height="{TemplateBinding MinHeight}"
                        HorizontalAlignment="Stretch"
                        CornerRadius="{DynamicResource ControlCornerRadius}">
                    <Grid Name="ContentRoot"
                          ColumnDefinitions="Auto,*">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{DynamicResource PaneToggleButtonHeightGridLength}" />
                        </Grid.RowDefinitions>

                        <Border Width="{TemplateBinding MinWidth}">
                            <Viewbox Name="IconHost"
                                     Width="16"
                                     Height="16"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <TextBlock Name="Icon"
                                           Text="&#xE700;"
                                           FontSize="{TemplateBinding FontSize}" />
                            </Viewbox>
                        </Border>
                        
                        <ContentPresenter Name="ContentPresenter"
                                          VerticalContentAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          Padding="4,0,0,0"
                                          Grid.Column="1" />
                        
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>

    <!-- pointerover -->
    <Style Selector="ui|Button.PaneToggleButtonStyle:pointerover /template/ Border#LayoutRoot">
        <Setter Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPointerOver}" />
    </Style>
    <Style Selector="ui|Button.PaneToggleButtonStyle:pointerover /template/ ContentPresenter#ContentPresenter">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
    </Style>
    <Style Selector="ui|Button.PaneToggleButtonStyle:pointerover /template/ TextBlock#Icon">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPointerOver}" />
    </Style>

    <!-- pressed -->
    <Style Selector="ui|Button.PaneToggleButtonStyle:pressed /template/ Border#LayoutRoot">
        <Setter Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundPressed}" />
    </Style>
    <Style Selector="ui|Button.PaneToggleButtonStyle:pressed /template/ ContentPresenter#ContentPresenter">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
    </Style>
    <Style Selector="ui|Button.PaneToggleButtonStyle:pressed /template/ TextBlock#Icon">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewButtonForegroundPressed}" />
    </Style>

    <!-- disabled -->
    <Style Selector="ui|Button.PaneToggleButtonStyle:disabled /template/ Border#LayoutRoot">
        <Setter Property="Background" Value="{DynamicResource NavigationViewButtonBackgroundDisabled}" />
    </Style>
    <Style Selector="ui|Button.PaneToggleButtonStyle:disabled /template/ ContentPresenter#ContentPresenter">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource NavigationViewButtonForegroundDisabled}" />
    </Style>

    <!-- Skipping Checked states in WinUI template, these are unused & likely for preservation -->



    <!-- - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - Search Button Style - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - -->

    <Style Selector="ui|Button.NavigationViewPaneSearchButtonStyle">
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Content" Value="&#xE11A;"/>
        <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}" />
        <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewToggleBorderThickness}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <!-- 
    WinUI does lightweight restyling of Button[BG/BB/FG] resources
    Here tho, StaticResource aliases tend not to play well with theme changing when they're located
    outside of the resource dictionary they're pointing too since they only evaluate once and
    aren't aware of theme changes, so we override here -->
    <Style Selector="ui|Button.NavigationViewPaneSearchButtonStyle:pointerover /template/ ContentPresenter">
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushPointerOver}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
    </Style>
    <Style Selector="ui|Button.NavigationViewPaneSearchButtonStyle:pressed /template/ ContentPresenter">
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushPressed}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
    </Style>
    <Style Selector="ui|Button.NavigationViewPaneSearchButtonStyle:disabled /template/ ContentPresenter">
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrushDisabled}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackgroundDisabled}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource NavigationViewItemForegroundDisabled}" />
    </Style>

    <!-- - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - Overflow Button Style - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - - -->

    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop">
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="Height" Value="{StaticResource TopNavigationViewOverflowButtonHeight}" />
        <Setter Property="Width" Value="{StaticResource TopNavigationViewOverflowButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel Name="RootGrid"
                       Height="{TemplateBinding Height}"
                       Width="{TemplateBinding Width}"
                       Background="{TemplateBinding Background}">
                    <Rectangle Name="PointerRectangle" />
                    
                    <ui:FontIcon Name="Icon"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center"
                                 FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                 FontSize="20"
                                 Glyph="&#xE10C;"
                                 Foreground="{TemplateBinding Foreground}"
                                 IsHitTestVisible="False" />
                </Panel>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop /template/ Rectangle#PointerRectangle">
        <Setter Property="Fill" Value="Transparent" />
        <Setter Property="IsVisible" Value="False" />
    </Style>

    <!-- pointerover -->
    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop:pointerover /template/ Rectangle#PointerRectangle">
        <Setter Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
    </Style>
    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop:pointerover /template/ Panel#RootGrid">
        <Setter Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
    </Style>
    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop:pointerover /template/ ui|FontIcon#Icon">
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
    </Style>

    <!-- pressed -->
    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop:pressed /template/ Rectangle#PointerRectangle">
        <Setter Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
    </Style>
    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop:pressed /template/ Panel#RootGrid">
        <Setter Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
    </Style>
    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop:pressed /template/ ui|FontIcon#Icon">
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
    </Style>

    <!-- disabled -->
    <Style Selector="ui|Button.NavigationViewOverflowButtonStyleWhenPaneOnTop:disabled /template/ ui|FontIcon#Icon">
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
    </Style>

    <!-- ...NoLabelStyleWhenPaneOnTop discontinued SKIPPED -->


    <!-- - - - - - - - - - - - -->
    <!-- - - - - Other - - - - -->
    <!-- - - - - - - - - - - - -->

    <Style Selector="TextBlock.NavigationViewItemHeaderTextStyle">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>

    <!-- based on TitleTextBlockStyle -->
    <Style Selector="ContentControl.NavigationViewTitleHeaderContentControlTextStyle">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
        <Setter Property="Margin" Value="{DynamicResource NavigationViewHeaderMargin}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

</Styles>
